# If not running interactively, don't do anything.
[[ $- != *i* ]] && return

# Set up Cloud Shell environment if we are using it.
#
# Do it early to overwrite some defaults.
[[ -f /google/devshell/bashrc.google ]] &&
	. /google/devshell/bashrc.google

# See https://wiki.archlinux.org/index.php/XDG_Base_Directory.
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# Set the locale.
export LANG="en_US.UTF-8"

# Set the default editor.
export EDITOR=vim
export VISUAL=vim

# Add ~/bin and ~/.local/bin to PATH.
[[ -d "$HOME/bin" ]] &&
	export PATH="$HOME/bin:$PATH"
[[ -d "$HOME/.local/bin" ]] &&
	export PATH="$HOME/.local/bin:$PATH"

# Set up local Go toolchain.
__setup_go() {
	export GOPATH="$XDG_CACHE_HOME/go"
	export GOCACHE="$XDG_CACHE_HOME/go/build"
	export GOMODCACHE="$XDG_CACHE_HOME/go/pkg/mod"
	export GOPRIVATE="go.astrophena.name/exp,go.astrophena.name/infra"
	export GOFLAGS="-modcacherw"
	export GO111MODULE=on
	export GOBIN="$HOME/.local/bin"
}
__setup_go

# Update window size after every command.
shopt -s checkwinsize

# Prevent file overwrite on stdout redirection.
# Use `>|` to force redirection to an existing file.
set -o noclobber

# Case-insensitive globbing.
shopt -s nocaseglob

# Perform file completion in a case insensitive fashion.
bind "set completion-ignore-case on"

# Treat hyphens and underscores as equivalent.
bind "set completion-map-case on"

# Display matches for ambiguous patterns at first tab press.
bind "set show-all-if-ambiguous on"

# Immediately add a trailing slash when autocompleting symlinks to
# directories.
bind "set mark-symlinked-directories on"

# Prepend cd to directory names automatically.
shopt -s autocd 2>/dev/null

# Correct spelling errors during tab-completion.
shopt -s dirspell 2>/dev/null

# Correct spelling errors in arguments supplied to cd.
shopt -s cdspell 2>/dev/null

# Append to the history file, don't overwrite it.
shopt -s histappend

# Save multi-line commands as one command.
shopt -s cmdhist

# Record each line as it gets issued.
PROMPT_COMMAND='history -a'

# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000

# Avoid duplicate entries.
HISTCONTROL="erasedups:ignoreboth"

# Don't record some commands.
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"

# Use standard ISO 8601 timestamp.
# %F equivalent to %Y-%m-%d.
# %T equivalent to %H:%M:%S (24-hour format).
HISTTIMEFORMAT='%F %T '

# Enable incremental history search with keyboard arrows.
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[C": forward-char'
bind '"\e[D": backward-char'

#
# Set the prompt.
#

# On Google Cloud Shell we have random hostnames like this:
#   cs-25870698597-default-default-tcxh5
# So let’s use use cloudshell in prompt and window title instead of hostname.

# First of all, let’s set the window title:
#
#  ~/src/dotfiles            => local
#  ~/src/dotfiles (romana)   => in SSH session

if [[ ! -z "$SSH_CONNECTION" ]]; then
	if [[ ! -f "/google/devshell/bashrc.google" ]]; then
		PS1="\[\e]0;\w ("$(hostname)")\a\]"
	else
		PS1="\[\e]0;\w ("cloudshell")\a\]"
	fi
else
	PS1="\[\e]0;\w\a\]"
fi

# Colorize the prompt (red if root, blue otherwise).
if [[ "$EUID" == 0 ]]; then
	PS1+="\[\033[0;31m\]"
else
	PS1+="\[\033[0;34m\]"
fi

# Finally, set the prompt:
#
#  ~/src/dotfiles ->           => local
#  ~/src/dotfiles romana ->    => in SSH session

if [[ ! -z "$SSH_CONNECTION" ]]; then
	if [[ ! -f "/google/devshell/bashrc.google" ]]; then
		export PS1+="\w \[\033[1;33m\]"$(hostname)"\[\033[0m\] -> "
	else
		export PS1+="\w \[\033[1;33m\]"cloudshell"\[\033[0m\] -> "
	fi
else
	export PS1+="\w\[\033[0m\] -> "
fi

# Automatically trim long paths in the prompt.
PROMPT_DIRTRIM=2

# Colorize ls and grep.
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Short ls aliases.
alias l='ls -h'
alias ll='l -l'
alias la='l -a'

# Reload ~/.bashrc.
r() {
	exec "$SHELL" -l
}

# Quickly update dotfiles.
u() {
	command u && r
}

# No arguments: `git status`.
# With arguments: acts like `git`.
g() {
	if [[ $# -gt 0 ]]; then
		git "$@"
	else
		git status
	fi
}

# Lovely gh aliases.
alias pr='gh pr create -f'
alias merge='gh pr merge -s -d; g pull'

# Colorize man pages.
man() {
	env \
		LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
		LESS_TERMCAP_md="$(printf '\e[1;31m')" \
		LESS_TERMCAP_me="$(printf '\e[0m')" \
		LESS_TERMCAP_se="$(printf '\e[0m')" \
		LESS_TERMCAP_so="$(printf '\e[0;37m')" \
		LESS_TERMCAP_ue="$(printf '\e[0m')" \
		LESS_TERMCAP_us="$(printf '\e[1;32m')" \
		man "$@"
}

# Load local settings and environment variables.
[[ -f "$HOME/.bashrc.local" ]] &&
	. "$HOME/.bashrc.local"
